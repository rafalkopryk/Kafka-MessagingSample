version: '3.4'

services:
  messaging.publishservice.api:
    image: ${DOCKER_REGISTRY-}messagingpublisherapi
    build:
      context: .
      dockerfile: Modules/Publisher/Publisher.Api/Dockerfile
    container_name: messaging-publisher
    networks:
    - kafkanetwork
    depends_on:
      - kafka
    environment:
        ASPNETCORE_ENVIRONMENT: Development
        EventBus__bootstrapservers: kafka:9092
        EventBus__groupid: messaging

  messaging.consumerservice.workerservice:
    image: ${DOCKER_REGISTRY-}messagingconsumerworkerservice
    build:
      context: .
      dockerfile: Modules/Consumer/Consumer.WorkerService/Dockerfile
    container_name: messaging-consumer
    networks:
    - kafkanetwork
    depends_on:
      - kafka
    environment:
        ASPNETCORE_ENVIRONMENT: Development
        EventBus__bootstrapservers: kafka:9092
        EventBus__groupid: messaging
        EventBus__enableautocommit: "false"
        EventBus__statisticsintervalms: 5000
        EventBus__autooffsetreset: earliest
        EventBus__enablepartitioneof: "true"

  zookeeper:
    image: wurstmeister/zookeeper
    networks:
    - kafkanetwork
    container_name: zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: "wurstmeister/kafka"
    ports:
     - "9092:9092"
    hostname: kafka
    networks:
    - kafkanetwork
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
        KAFKA_ADVERTISED_HOST_NAME: kafka
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        KAFKA_ADVERTISED_PORT: 9092
        KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true" 

networks:
  kafkanetwork:
    driver: bridge
